
# ('c=', '0x7a7e031f14f6b6c3292d11a41161d2491ce8bcdc67ef1baa9eL')
# ('e=', '0x872a335')
#q + q*p^3 =1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586
#qp + q *p^2 = 1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594

a1= 1285367317452089980789441829580397855321901891350429414413655782431779727560841427444135440068248152908241981758331600586
a2= 1109691832903289208389283296592510864729403914873734836011311325874120780079555500202475594
e=0x872a335
c=0x7a7e031f14f6b6c3292d11a41161d2491ce8bcdc67ef1baa9e
import gmpy2
import libnum
import sympy

p= sympy.symbols('p')
q= sympy.symbols('q')
f1=q+q*p**3-a1
f2=q*p+q*p**2-a2
s=sympy.solve([f1,f2],[p,q])

p=int(s[1][0])
q=int(s[1][1])
n=p*q
phi=(p-1)*(q-1)
d=libnum.invmod(e,int(phi))

m=pow(c,d,n)
print(libnum.n2s(int(m)))