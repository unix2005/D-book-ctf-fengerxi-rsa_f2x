

e1e2= 66671
n= 22036150695553266194635991750622964062076222100728534216282950231345238868972981454135650552423957450456194408118740413208905323711908462010000606067160959041048516810567315718290798011868755239412495665833180226173844692670413861828232597415913742986041398187072804790498836311227755280567905351409582909411290817265664048189606854704278483291506840368238502693535737388873420201965445285373460453228109433845094671655970886510102794021516199346038821569029769522862158665895606328404468784527165680817648735313950743487257262395836075755788531976924718287000578346486305490500981264546528622215640590628140538174746159701477971244599373977977688291436716342420845791473564207302436497160847709550943205377988625153771421036664793235511343378750490373014885069350680497873393071840400564451073733927713731461092240092626379010568870204094864130022004808198280260386471599832527341762135112637442622347947303935044650733674398008870526753254823710388325481356087064676088444847496671076159875862693796790885730206745277358363641269597393374985482939864653517252302268930642493834116352264069475568324440186203285210726158080645303976403913681889667669307603561352975349707221403165216702496570157787189015625798687954568267496527866679305823071062458839469242366105592251013934748799261556330230392125203454913
c1= 20992006619991605406759628836673659797891663829402474373832257039152242744381465435669308231804772459855681273535248943493412810689737082815302576627663396886144763747920577666735865293256566574556628644620166249502963481316885736916744166959845711919971655848737156421537014459767946615151083200683300559556849209995377139426288685079693347312715408577010848460727123412974856686277839308002339792642620728023532779936477225126872602197545224639244707115622709670576086539536583109123591262500171112458840206528197681229556724971371722216084516391992024619788357783153002611410510664556008448445801612957801452087463960398332019231500061517148081944456593370777618174610336783822264241579007297440232931229935435513986537436577339956799498587788597493023455793628702040026411947582779147503249383948196853747429886427550880736074700217106302867315686575150374626649568489630480249304464533005228297662014349814029939368043677272730207721354679781707566950171134772574276165793389792590376263188101356131358772555778188408270229383272043619095773165902098646512483473059792469695906804471374050910748343567191213986016565136576253205657776084560687001519267133840210591149129411082531421371498512365628725082540367375591092388637929075222287276802324809286927370303799581179569958492798121950584851112089758250
c2= 18634158758791231876940767679628668275260918733431431391893145390012566281429307693642195369130267168661718213377996371272984852842965003422592473500750655263514930706312269349532845434646573730754167067957475702547825146836214425860141141598260459549580526720153814557986896244662423021741129453502708946927075240423327264319265648918450167083376056242936508157832468294339654834645873454322276532705281964700209045790404373874527144294767551645787739880245976502175357621094995174292970512326067930659791499523246881866388338869992873902635409995577433947478400143039765860016448659238824849523700779204400430942325648804806965834193375720428266765569789892669563866227559658963638934763818735623002081149225906895758557797894323594003219726430008666644435803047373759208126037796557621534004041882793101096989825740172009792989284489015268573084673022575433114135587939443070031751046816347852461892718037185943883692215109265277011126807595032668674430584106929732413037817292966140790163097446059088280300841432941345574654044838032228584722040595406684921833752610148087921653264361916248924005609643750076974301463122669437569719061964766752428076543418605522874549748424893419383052104007337665452964938392242653737958302213485468187579470880603670190809179066545171557048265641467091987963161498681314
import libnum
import gmpy2
for e1 in range(2,66671):
    e2=e1e2//e1
    if e1e2==e1*e2:
        s1,s2,gcd1=libnum.xgcd(e1,e2)
        m1 = pow(c1, s1, n) * pow(c2, s2, n) % n
        for k in range(10000):
            tmp = m1 + k * n
            m, s = gmpy2.iroot(tmp, gcd1)
            if s:
                #print(m)
                flag=libnum.n2s(int(m))
                if b"flag" in flag:
                    print(flag)
                break


