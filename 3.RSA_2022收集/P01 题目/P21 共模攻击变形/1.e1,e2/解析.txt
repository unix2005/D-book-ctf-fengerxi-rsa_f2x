c1 = pow(m, e1, n)
c2 = pow(m, e2, n)
gcd(e1,e2)=x

扩展欧几里德算法
e1*s1+e2*s2 = x

(c1^s1*c2^s2)%n = ((m^e1%n)^s1(m^e2%n)^s2)%n

(c1^s1*c2^s2)%n = ((m^e1%n)^s1*(m^e2%n)^s2)%n

=> (c1^s1*c2^s2)%n = ((m^e1%n)^s1%n*(m^e2%n)^s2%n)%n #(a * b) % p = (a % p * b % p) % p

=> (c1^s1*c2^s2)%n = ((m^e1)^s1%n*(m^e2)^s2%n)%n #((a % p) ^ b) % p =a ^ b % p

=> (c1^s1*c2^s2)%n = ((m^e1)^s1*(m^e2)^s2)%n # (a % p * b % p) % p=(a * b) % p

=>(c1^s1*c2^s2)%n = ((m^(e1*s1)*(m^(e2*s2))%n #。幂的乘方，底数不变，指数相乘。

(c1^s1*c2^s2)%n = (m^(e1*s1+e2*s2))%n  # 同底数幂相乘，底数不变，指数相加。

 因为e1*s1+e2*s2 = x

 (c1^s1*c2^s2)%n = (m^11)%n

 m^x= (c1^s1*c2^s2)+kn
需要爆破下k，开x次方后，得到m
有点类型 低加密指数攻击