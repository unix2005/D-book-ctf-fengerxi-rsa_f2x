import gmpy2
import libnum
import sympy


e= 65537
phi= 100934273673100862800057857125104041906331471551876008641595308575170790331960132946288829080276246356460329602740232136707343250625602597100716227366165534669135119440771921782842535057501792833077465785747749093276479652365564768594322484858786736903956039651993130551631122543247111350777044428541835413000
c= 36023103606396137752101053526421058664512240888067896229780873735956190368029802326540070863432869324378223238222108359604178708593086360361049799115801418966952398870439519038592220058770958346196770446840980888434533222034187933648824975908553247712298324206603054886091712503162576362975705072215481495279
p1= 9544837766322455221960675491859783323612875486627876438961594567340005491945201446760366637821592557633001947291977960224528363699405583951944784323000133
q1= 805752543805926982853514307416572100720510081009061128327718852897347995603547426351989972878239695949042728385288546028147034451756052574684412122312989

p = sympy.symbols('p')
q = sympy.symbols('q')
f1 = p1 * p + q1 * q - 1 - p * q
f2 = (p - 1) * (q - 1) - phi
pq = sympy.solve([f1, f2], [p, q])
p = (pq[1][0])
q = (pq[1][1])
n = p * q
d = gmpy2.invert(e, phi)
m = pow(c, int(d), int(n))
print(libnum.n2s(int(m)))
