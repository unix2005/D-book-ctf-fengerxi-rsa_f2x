import gmpy2
import sympy


n= 151913753330829779363367789673597253978048533620182497747132604072824540323836504426239804081241567027736270622449855295828160124814438423488754623643933533204599629980943193643551097211543531050709295786991507076525522113596966181359611779370941657496310723772521162794885147507996772774824707716432570452403
c= 81337035006499494768796081417947319039576994033747417935302379695580101083380316241731843797604372408639889020709527188720865744673275465620672796534287478878369491626837235522013863942055110385349674739290041899890532139474221925394370465243005480529009377659505930236007519685951328899152586367092905739547
e=65537
p = sympy.symbols('p')
q = sympy.symbols('q')

f2 = p * q - n
for k in range(e,1,-1):
    try:
        f1=e*q-1-k*p
        a = sympy.solve([f1, f2], [p, q])
        if len(a)>0:
            print(a)
            break

    except:
        continue

for i in a:
    if gmpy2.is_prime(int(i[0])):
        p = i[0]
        q = i[1]
        break
import libnum
phi=(p-1)*(q-1)
d=gmpy2.invert(e,int(phi))
m=pow(c,d,n)
print(libnum.n2s(int(m)))