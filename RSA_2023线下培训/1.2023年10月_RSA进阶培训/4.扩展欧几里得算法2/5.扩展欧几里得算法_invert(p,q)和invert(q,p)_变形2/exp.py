import gmpy2
import libnum
import sympy


e= 65537
phi= 104989120059139856231789121435410076145304014273749857198869973494720821216965275507749753417688433737109344392187459872429350987541149836265513067167943567994060514693215434383103325998126294481670051319886112870166964431268030093105225195813444033063068774359942415197519749116128235468615628727503232429712
c= 18152939930530031442760070341580234271514009631905727185946917410280988200551865933799750218972319114450727944401485134809142054028140720719482985025615295273988884519935574015855360841607271948789357324840440502003603947290711938797633889672916021864171715078611430832462685052294416342356348050327103864842
p1= -5462227378974630359675281008917789683286366900467192713512508960548847437849436049665981455148366472560303054321505752308677067588564664661268582569774197
q1= 7173549969986110112701704236249876677943076694185234780042538361369834348471042743484443723524391619056535405937819341188166103911374175113903195390174456

p = sympy.symbols('p')
q = sympy.symbols('q')
f1 = p1 * p + q1 * q - 1
f2 = (p - 1) * (q - 1) - phi
pq = sympy.solve([f1, f2], [p, q])
p = (pq[1][0])
q = (pq[1][1])
n = p * q
d = gmpy2.invert(e, phi)
m = pow(c, int(d), int(n))
print(libnum.n2s(int(m)))
