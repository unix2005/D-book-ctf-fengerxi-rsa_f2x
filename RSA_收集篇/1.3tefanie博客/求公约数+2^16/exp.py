
from Crypto.Util.number import *
import gmpy2

num1= 3130733350077377796582129827672369109515669322861153895527433610381308888294880919325066836024925689484698424688648937209987569616907613043496752812220672520860706477161947543458260304574622325813702298121272180598352235631310707375904286401761181035210642894729901058489234940894315226006408340119261127080
num2= 77078448498698415439182158430073794237939291395645937919464974794554574261780421475561170729333497493281658717895703542169692323696450753726862499695805466288148700536995299093363592920760784370020000186479003205081920039610275297590181011336565094577965819016489404854302473983734644971462938909508573003900
n= 126860329376774079212675280620268561421294705726467991686725684655666011488334321934630143030296900083765560726677574776934411992503869906546238401203698835962886632161463854012435280489036251239771437419205794524864055213744250542122961278947660409915421859495111744745684148204706321385858581919051290749197
c= 57967279722822095263951414810160291806529067883496707422667918218535022675348014110294011523621916211178118798372709333601681731562382099336625970691805926311835050768604044678319885670088152942030861528757614043234415967215420078699062173988413546836354649321566348608030623187944331444221849223169130660436

p = gmpy2.gcd(num1+num2,n)
q = n//p

x0=gmpy2.invert(p,q)
x1=gmpy2.invert(q,p)
cs = [c]
for i in range(16):
    ps = []
    for c2 in cs:
        r = pow(c2, (p + 1) // 4, p)
        s = pow(c2, (q + 1) // 4, q)

        x = (r * x1 * q + s * x0 * p) % n
        y = (r * x1 * q - s * x0 * p) % n
        if x not in ps:
            ps.append(x)
        if n - x not in ps:
            ps.append(n - x)
        if y not in ps:
            ps.append(y)
        if n - y not in ps:
            ps.append(n - y)
    cs = ps

for m in ps:
    flag = long_to_bytes(m)
    if b"flag" in flag:
        print(flag)
        break

