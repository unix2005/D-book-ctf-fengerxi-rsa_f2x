from Crypto.Util.number import *
from multiprocessing import Pool
import os
import gmpy2

def get_d(i):
    global q_k_1
    global q_k
    k = i.numerator()
    q_k = i.denominator()
    # print("Now is: %d" % q_k)
    # print("%s is run" %os.getpid())
    for r in range(20):
        d = r * q_k + q_k_1
        if pow(pow(2, e, n), d, n) != 2:
            continue
        else:
            # print(r)
            # print(q1)
            # print(q0)
            return d
    q_k_1 = q_k

if __name__ == "__main__":
    e = 543692319895782434793586873362429927694979810701836714789970907812484502410531778466160541800747280593649956771388714635910591027174563094783670038038010184716677689452322851994224499684261265932205144517234930255520680863639225944193081925826378155392210125821339725503707170148367775432197885080200905199759978521133059068268880934032358791127722994561887633750878103807550657534488433148655178897962564751738161286704558463757099712005140968975623690058829135
    n = 836627566032090527121140632018409744681773229395209292887236112065366141357802504651617810307617423900626216577416313395633967979093729729146808472187283672097414226162248255028374822667730942095319401316780150886857701380015637144123656111055773881542557503200322153966380830297951374202391216434278247679934469711771381749572937777892991364186158273504206025260342916835148914378411684678800808038832601224951586507845486535271925600310647409016210737881912119
    c = 262857004135341325365954795119195630698138090729973647118817900621693212191529885499646534515610526918027363734446577563494752228693708806585707918542489830672358210151020370518277425565514835701391091303404848540885538503732425887366285924392127448359616405690101810030200914619945580943356783421516140571033192987307744023953015589089516394737132984255621681367783910322351237287242642322145388520883300325056201966188529192590458358240120864932085960411656176
    q_k_1 = 1
    conv = continued_fraction(Integer(e)/Integer(n)).convergents()

    pool = Pool()  # 这里用的进程池缩短总的运算时间
    res = pool.map(get_d , conv)
    pool.close()
    pool.terminate()
    for i in res:
        if i != None:
            d = i
    m = pow(c, d, n)
    print(long_to_bytes(m).decode())
