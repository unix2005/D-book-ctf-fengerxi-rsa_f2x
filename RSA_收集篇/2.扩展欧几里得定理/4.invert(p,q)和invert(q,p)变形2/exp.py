import gmpy2
import libnum
import sympy


e= 65537
phi= 118947905516135481778480001157110092792086845961945085967997121601881954228025252256738229656206117362973438470781287994896470806204676194754851611211858421591557723766409950162848041152194444906764738721881397131458820736750196128329805077254169065226964831175465068702596407711776136994710902788269608056960
c= 100000269278836943921727857604034806376248829662731880483487515912097212123339690321961727050625870277691305872789902022835485373190949048733734828237960343350792634542310105273014908736641550433988534650078195633281943852863201740841027943140698220632327203124669165828122497133674404861483436625742385285959
p1= 6304571768001583506398133719022837470830677949220866361267728280223904874392901709881105055252893668039223671284521399643119214231221721678682789901122530
q1= -5843025195585057819000206453488433811634061385451457543309635644188375394077172959869907126483694087428482284863883620752036478393814776504975536553165893

p = sympy.symbols('p')
q = sympy.symbols('q')
f1 = p1 * p + q1 * q - 1
f2 = (p - 1) * (q - 1) - phi
pq = sympy.solve([f1, f2], [p, q])
print(pq)
p = (pq[1][0])
q = (pq[1][1])
n = p * q
d = gmpy2.invert(e, phi)
m = pow(c, int(d), int(n))
print(libnum.n2s(int(m)))
