


m =  [317373385442325309490126978143569357540, 221713642615900754871455583169037656558, 196289364596638326277049734802446938300, 247061551433347435409823882059850553282, 323402141217785400810426086286247835137, 170316516030765512154283308705681130889, 238260825445985150121803064547287309573, 235008724579872652181722663904131823600]
a =  [33294675495512365447936819977488986114,  167059006172538583650602409582350531874, 84260142588215759449080942199098236294, 187781777288843675003677762868332719566, 224545029830266627271846651706154185491, 90061147984988321355376057818169226157, 66745850796226643295313002664544925074, 71379202331049671317043059637642201894]







n = 3  # 同余方程个数
# a = [dp,dq,dr]  # 余数
# m=[(q-1)*(r-1),(p-1)*(r-1),(p-1)*(q-1)] # 模数


"""扩展欧几里得"""


def exgcd(a, b):
    if 0 == b:
        return 1, 0, a
    x, y, q = exgcd(b, a % b)
    x, y = y, (x - a // b * y)
    return x, y, q


"""扩展中国剩余定理"""


def CRT():
    if n == 1:
        if m[0] > a[0]:
            return a[0];
        else:
            return -1;

    for i in range(n):
        if m[i] <= a[i]:
            return -1;

        x, y, d = exgcd(m[0], m[i])
        if (a[i] - a[0]) % d != 0:
            return -1;

        t = m[i] // d;
        x = (a[i] - a[0]) // d * x % t
        a[0] = x * m[0] + a[0];
        m[0] = m[0] * m[i] // d;
        a[0] = (a[0] % m[0] + m[0]) % m[0]
        # print(a[0])
    return a[0];

import hashlib

x = CRT()
flag=hashlib.sha256(str(x).encode()).hexdigest()
print(flag)
