import gmpy2
import libnum

p = 11533298591552660774928953576072049620813001224639245076182518027689798183144855583014989758285793940014181501775533347875814029173848955228760870650716471
q = 6851228328507427681819676125017382616105955617598109172739817901765488925651165986376913984095554026612306345102548409211032353713655554638691405814095051
n = 79017262031580405973013381272375912803284169947733005613789609522845149509335818869860794059408334484086067080673390502996481854531596681073740159794679517491246414721548541498380348567024735815461993209829307187606745526257793529513449213485879796860072585913501277914655108385096566614098778831183645285021
c = 3136716033731747333066709218205224478598549959649233066947237436248325676919354368610290707643848849183950144795875458043166449878960464645178396015502020250808466164480365511655565961689192195239375625
e = 2

inv_p = gmpy2.invert(p, q)
inv_q = gmpy2.invert(q, p)
mp = pow(c, (p + 1) // 4, p)
mq = pow(c, (q + 1) // 4, q)
a = (inv_p * p * mq + inv_q * q * mp) % n
b = n - int(a)
c = (inv_p * p * mq - inv_q * q * mp) % n
d = n - int(c)
# 因为rabin 加密有四种结果，全部列出。
aa = [a, b, c, d]
for i in aa:
    print(i)
    print(libnum.n2s(int(i)))
